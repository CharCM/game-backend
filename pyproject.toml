[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ['py36', 'py37', 'py38']
include = '\.py$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.coverage.report]
show_missing = true
skip_covered = true
# Regexes for lines to exclude from consideration

exclude_lines = [
	# Have to re-enable the standard pragma
	"pragma: no cover",

	# Don't complain about missing debug-only code:
	"def __repr__",

	# Don't complain if tests don't hit defensive assertion code:
	"raise AssertionError",
	"raise NotImplementedError",

	# Don't complain if non-runnable code isn't run:
	"if 0:",
	"if __name__ == .__main__.:"
]

[tool.coverage.html]
directory = "reports"

[tool.coverage.run]
omit = ["*/.venv/*"]
source = ["game"]
branch = true
relative_files = true

[tool.coverage.xml]
output = "reports/coverage.xml"

[tool.isort]
profile = "black"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"
known_first_party = ["config", "game"]

[tool.mypy]
files = "game"
follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
  "structlog.*",
  "pip.*",
]
ignore_missing_imports = true

[tool.poetry]
name = "game"
version = "0.0.0"
description = "Trying out pygame"
authors = []

[tool.poetry.dependencies]
python = "^3.11"
django = "*"
requests = "*"

[tool.poetry.dev-dependencies]
advbumpversion = "*"
black = "*"
coverage = "*"
isort = "*"
mypy = "*"
pytest = "*"
pytest-cov = "*"
pytest-env = "*"
pytest-mock = "*"
pytest-xdist = "*"
requests-mock = "*"
flake8 = "*"
freezegun = "*"
ipdb = "*"
types-requests = "*"


[tool.pytest.ini_options]
python_files = ["tests.py", "test_*.py", "*_tests.py"]
junit_family = "xunit1"
filterwarnings = [
	"ignore::ResourceWarning"
]
addopts = [
	# Raise warnings as errors
	"-vvv",
	"--showlocals",
	# Coverage report
	"--cov",
	"--cov-report=xml",
	"--cov-report=term",
	"--cov-report=html",
]
env = [
]
